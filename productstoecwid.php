<? // phpinfo();

// admin@site24   495b77c7bf

use GuzzleHttp\Client;

require_once (__DIR__.'/config.php');
require_once (__DIR__.'/DBAccess.php');
require_once (__DIR__.'/remotelog.php');

// Создание экземпляра клиента Guzzle для АПИ обмена
$clientEcwid = new Client([
    'base_uri' => 'https://app.ecwid.com',
    'headers' => [
//        'Content-Type' => 'application/json',
        'accept' => 'application/json',
//        'Authorization' => 'Bearer public_mpWUiG4ERwmrk5B3yuirpx3xHmRmeQqS',
        'Authorization' => $bearer_secret,
//	        "Accept-Encoding" => "gzip"
        "type" =>"image",
        "mediaType" => "application/json"
    	]
    ]);

// Создание экземпляра клиента Guzzle загрузки для картинок
    $clientEcwidImage = new Client([
        'base_uri' => 'https://app.ecwid.com',
        'headers' => [
            'content-type' => 'application/octet-stream',
            'accept' => 'application/json',
            'Authorization' => $bearer_secret,
//	        "Accept-Encoding" => "gzip"
            "type" =>"image",
            "mediaType" => "application/octet-stream"
    	]
    ]);


$message_prefix = $storeId. "-магазин.Крон-1.Товары(МС->Сайт).  ";
$message = " старт-крон ";
$level = "info";
$data = array(
    "application" => "productstoEcwid",
    "store Ecwid" => $storeId,
    );

writeToLog($data,$message_prefix.$message, $level);

/*
$url = "api/v3/".$storeId."/categories";
$provider = $clientEcwid->get($url);
$data = json_decode($provider->getBody(), true);
//$provider = $clientEcwid->get($urlAuthEcwid);
//writeToLog($provider,' /auth Ecwid---');
writeToLog($data,'Ecwid /categories =======-========================================');
            [7] => Array
                (
                    [id] => 161323042
                    [parentId] => 161319291
                    [orderBy] => 10
                    [name] => level2
                    [url] => https://store16208263.ecwid.com/level2-c161323042
                    [autogeneratedSlug] => level2
                    [customSlug] => 
                    [productCount] => 1
                    [description] => 
                    [enabled] => 1
                    [isSampleCategory] => 
                    [seoTitle] => level2
                    [seoDescription] => 
                )
*/


if ( $isLoginAuth ) {
    $arrayClient = array(
        'base_uri' => 'https://api.moysklad.ru',
        'auth' => $authMS, 
        'headers' => [
//          'Authorization' => $bearer,
          'Content-Type' => 'application/json',
	        "Accept-Encoding" => "gzip",
            "type" =>"image",
            "mediaType" => "application/json"
        ]
    );
}
else {
    $arrayClient = array(
        'base_uri' => 'https://api.moysklad.ru',
        'headers' => [
          'Authorization' => $bearer,
          'Content-Type' => 'application/json',
	        "Accept-Encoding" => "gzip",
            "type" =>"image",
            "mediaType" => "application/json"
        ]
    );
}
$clientMS = new Client($arrayClient);

/*    $clientMS = new Client([
        'base_uri' => 'https://api.moysklad.ru',
        'headers' => [
            'Authorization' => $bearer,
            'Content-Type' => 'application/json',
	        "Accept-Encoding" => "gzip",
            "type" =>"image",
            "mediaType" => "application/json"
    	]
    ]);
*/
//    writeToLog("client", ' /auth---===========================================');

// FOLDERS
/*
    $url = "/api/remap/1.2/entity/productfolder";
    $response = $clientMS->get($url); // from MS

    $data = json_decode($response->getBody(), true);
//    writeToLog($data, 'MS /productFolder---==================================================================');

    foreach($data["rows"] as $item)  {
    }
*/

// STEP

$result = dbselect();
foreach($result as $row) {
//        echo '<pre>'; print_r($row); echo '</pre>';
    $step = $row["step"];
//        $limit = $row["length"];
    $offset = $row["offset"];
}
/*
$step = 0;
$limit = 3;
$offset = 0; // from DB !!!
*/

    $url = "/api/remap/1.2/entity/product?limit=".$limit."&offset=".$offset;
    $message =  'шаг '.$step.' начало работы '.$url; 
    writeToLog($row,$message_prefix.$message, $level);

    try
    {
        $response = $clientMS->get($url); // from MS
    }
    catch(Throwable $ex)
    {
        $message =  " ошибка получения данных в МС ";
        $mess = array(
            "error" => $ex->getMessage(),
        );
        writeToLog($mess,$message_prefix.$message, "error");
        return;
    }            
    $data = json_decode($response->getBody(), true);
    $message = 'список товаров для шага: '.$step; 
    if (!$isLogFileShort && $isLogFile) writeToLog($data["meta"],$message_prefix.$message,$level);
//    $limit = $data["meta"]["limit"];
    $offset = $offset + $data["meta"]["limit"];
    if(empty($data["rows"])) {
        $step = 0;
//        $limit = $data["meta"]["limit"];
        $offset = 0;
    }
    dbupdatesteps($step+1,$limit,$offset);// log-steps



//  остатки одним пакетом
/*
    $urlStock = "/api/remap/1.2/report/stock/all/current?stockType=quantity&include=zeroLines"; // остатки, включая нулевые
    try
    {
        $stocks = $clientMS->get($urlStock);
    }
    catch(Throwable $ex)
    {
        $message =  " ошибка получения пакета остатков товаров в МС ";
        $mess = array(
            "error" => $ex->getMessage(),
        );
        writeToLog($mess,$message_prefix.$message, "error");
        return;
    }            
    $rowsStock = json_decode($stocks->getBody(), true);
    $message = " шаг:".$step." пакет остатков из МС ";
    writeToLog($rowsStock,$message_prefix.$message, $level);

*/

    $numberItem = 0;
    foreach($data["rows"] as $item)  {
        $numberItem++;
    
        $message =  "товар из МС - код синхронизации: ".$item[$fieldSync]." название: ".$item["name"];
        writeToLog($item,$message_prefix.$message,$level);

        if($item["variantsCount"] > 0) {
            $message =  " Товар имеет модификации - не синхронизирует. Код синх.: ".$item[$fieldSync]." название: ".$item["name"];
            writeToLog($item,$message_prefix.$message,"error");
            continue;
        }
// остатки товара из пакета остатков
/*
        $isStock = false;
        foreach($rowsStock as $row)  {
            if($row["assortmentId"] == $item["id"]) {
                $isStock = true;
                $stock = $row["quantity"];
                break;
            }
        }
        if(!$isStock) {
            $message =  "ошибка - нет остатков товара в пакете из МС код синх.: ".$item[$fieldSync]." название: ".$item["name"];
            writeToLog($datarow,$message_prefix.$message,"warn");
            continue;
        } 
*/
//  запрос расширенных остатков по товару
        $urlStock = "/api/remap/1.2/report/stock/all?stockType=quantity&groupBy=consignment&includeRelated=true&include=zeroLines&filter=product=".$item["meta"]["href"];
        try
        {
            $stocks = $clientMS->get($urlStock);
        }
        catch(Throwable $ex)
        {
            $message =  " ошибка запроса остатков товара в МС ";
            $mess = array(
                "error" => $ex->getMessage(),
            );
            writeToLog($mess,$message_prefix.$message, "error");
            continue;
        }            
        $datarow = json_decode($stocks->getBody(), true);
        $quantity = 0;
        foreach($datarow["rows"] as $row)  {
            $quantity = $quantity + $row["quantity"];
        }
        $message =  " расширенный отчет остатков.Код синх.: ".$item[$fieldSync]." quantity: ".$quantity;
        writeToLog($datarow,$message_prefix.$message,$level);
        $stock = $quantity;


  // groupBy=consignment для серий должно работать в остатках
/*
        $urlStock = "/api/remap/1.2/report/stock/all/current?stockType=quantity&include=zeroLines&filter=assortmentId=".$item["id"];
        try
        {
            $stocks = $clientMS->get($urlStock);
        }
        catch(Throwable $ex)
        {
            $message =  " ошибка запроса остатков товара в МС ";
            $mess = array(
                "error" => $ex->getMessage(),
            );
            writeToLog($mess,$message_prefix.$message, "error");
            continue;
        }            
        $datarow = json_decode($stocks->getBody(), true);
        if(!empty($datarow[0])) $stock = $datarow[0]["quantity"];
        else {
            $message =  "ошибка при получении остатков товара из МС код синх.: ".$item[$fieldSync]." название: ".$item["name"];
            writeToLog($datarow,$message_prefix.$message,"warn");
            continue;
        } 
        $message =  "товар из МС - ответ про остатки.Код синх.: ".$item[$fieldSync]." название: ".$item["name"];
        writeToLog($datarow,$message_prefix.$message,$level);

*/               
        $message = " шаг:".$step." остаток: ".$stock." товар в пакете из МС: ".$numberItem." из ".$limit;//.$item["name"];
        writeToLog(array(),$message_prefix.$message, $level);

/*        
        if(!empty($item["productFolder"])) {
            $urlGroup = $item["productFolder"]["meta"] ["href"];
            $groups = $clientMS->get($urlGroup);
            $datarow = json_decode($groups->getBody(), true);
        }
*/

//  SEARCH PRODUCT in Ecwid
//$url = "/api/v3/".$storeId."/products?attribute_externalCode=".$item[$fieldSync];
$url = "/api/v3/".$storeId."/products?sku=".$item[$fieldSync];
        try
        {
            $response = $clientEcwid->get($url);
        }
        catch(Throwable $ex)
        {
            $message =  " ошибка поиска товара в Эквид ";
            $mess = array(
                "error" => $ex->getMessage(),
            );
            writeToLog($mess,$message_prefix.$message, "error");
            continue;
        }            
        $data = json_decode($response->getBody(), true);
        if($data["count"] > 0) {
            $message =  'найден товар в Эквиде: '.$item["name"];
            writeToLog($data["items"][0],$message_prefix.$message, $level);
            $isProduct = true;
            $productId = (string)$data["items"][0]["id"];
            if($data["count"] > 1) {
                $message =  " найдено похожих товаров в Эквид: ".$data["count"];
                writeToLog($data,$message_prefix.$message, "error");
            }
        }
        else {
            $message =  ' товар не найден в Эквиде: '.$item["name"];
            writeToLog($data,$message_prefix.$message, $level);
            $isProduct = false;
        }

        $product = array();
        $product["name"] = $item["name"];
        $product["description"] = "";
        if(!empty($item["description"])) 
            $product["description"] = $item["description"];
        $product["quantity"] = $stock;
        if($stock > 0 || $enableAbsent)  $product["enabled"] = true;
        $product["price"] = $item['salePrices'][0]['value']/100.;


        if($isProduct) { //  UPDATE
            $url = "/api/v3/".$storeId."/products/".$productId;
            $message =" изменяем товар в Эквид - артикул: ".$item[$fieldSync]." название: ".$item["name"];
            writeToLog($product,$message_prefix.$message, $level);
            try
            {
                $response = $clientEcwid->put($url, ['json' => $product]);
            }
            catch(Throwable $ex)
            {
                $message =  " ошибка в Эквид при изменении товара ";
                $mess = array(
                    "error" => $ex->getMessage(),
                );
                writeToLog($mess,$message_prefix.$message, "error");
                continue;
            }            
            $data = json_decode($response->getBody(), true);
            $message =" результат изменения товара в Эквид - код: ".$productId."(артикул: ".$item[$fieldSync].") название: ".$item["name"];
            writeToLog($data,$message_prefix.$message, $level);
}
        elseif($stock > 0 || $addAbsent) {  //  ADD
//        else {  //  ADD
            $url = "/api/v3/".$storeId."/products";
/*            $product["attributes"][] = array(
                "name" => $fieldSync,
                "value" => $item[$fieldSync],
                "show" => "NOTSHOW",
                "type" => $fieldSync
            );
*/
            $product["sku"] = $item[$fieldSync];

            $message =" добавляем товар в Эквид - артикул: ".$item[$fieldSync]." название: ".$item["name"];
            writeToLog($product,$message_prefix.$message, $level);
            try
            {
                $response = $clientEcwid->post($url, ['json' => $product]);
            }
            catch(Throwable $ex)
            {
                $message =  " ошибка в Ecwid при добавлении товара ";
                $mess = array(
                 "error" => $ex->getMessage(),
                );
                writeToLog($mess,$message_prefix.$message, "error");
                continue;
            }            
            $data = json_decode($response->getBody(), true);
            $productId = $data["id"]; 
            $data = json_decode($response->getBody(), true);
            $message =" результат добавления товара в Эквид - код: ".$productId."(артикул: ".$item[$fieldSync].") название: ".$item["name"];
            writeToLog($data,$message_prefix.$message, $level);
        }
        else continue;

        $urlImage = "/api/remap/1.2/entity/product/".$item["id"]."/images";
        try
        {
            $images = $clientMS->get($urlImage);
        }
        catch(Throwable $ex)
        {
            $message =  " ошибка в МС при получении картинки товара ";
            $mess = array(
                "error" => $ex->getMessage(),
            );
            writeToLog($mess,$message_prefix.$message, "error");
            continue;
        }            
        $dataim = json_decode($images->getBody(), true);
//        writeToLog($dataim, 'пакет MS images product---========================================================================');

        if(!empty($dataim['rows'][0]['meta']['downloadHref'])) {
//            $resource = fopen('/files/'.$dataim['rows'][0]['filename'], 'w');
            $urlImage = $dataim['rows'][0]['meta']['downloadHref'];
//            $image = $clientMS->get($urlImage,['sink' => $resource]);
            $filedir = __DIR__.'/files/'.$dataim['rows'][0]['filename']; 
            $image = $clientMS->get($urlImage,['sink' => $filedir ]);
//            $data = json_decode($image->getBody(), true);
//            writeToLog($data, 'пакет MS image decode ---========================================================================');
//            $body = fopen($filedir, 'r');
//            $urlPost = "/api/v3/".$storeId."/products/".$item["id"]."/image";
//            $exturl = "http://ms-ecwid-reh.devaprix.ru/files/?externalUrl=".$dataim['rows'][0]['filename'];
            $exturl = "http://ms-ecwid-reh.devaprix.ru/files/".$dataim['rows'][0]['filename'];
//            $urlPost = "/api/v3/".$storeId."/products/".$productId."/image?externalUrl=".$exturl;
            $urlPost = "/api/v3/".$storeId."/products/".$productId."/image";
//            $exturl = "http://ms-ecwid-reh.devaprix.ru/files/".$dataim['rows'][0]['filename'];
//            $r = $clientMS->post($urlPost, ['body' => file_get_contents($filedir)]);
//            $r = $clientEcwid->post($urlPost, ['externalUrl' => $exturl]);
//            $r = $clientEcwid->post($urlPost);

// URL для загрузки изображения товара
//$upload_url = 'https://app.ecwid.com/api/v3/' . $store_id . '/productImage?token=' . $api_key;

//        $r = file_get_contents($filedir);
//            writeToLog(json_decode($r->getBody(), true), 'POST image  ---========================================================================');


// Новое имя загружаемого изображения товара
//$new_image_filename = "new".$dataim['rows'][0]['filename'];

                try
                {
                    $r = $clientEcwidImage->post($urlPost, ['body' => file_get_contents($filedir)]);
                }
                catch(Throwable $ex)
                {
                    $message =  " ошибка в Эквид при загрузке картинки товара ";
                    $mess = array(
                        "error" => $ex->getMessage(),
                    );
                    writeToLog($mess,$message_prefix.$message, "error");
                    continue;
                }            
                $message =" итоги отправки image в Эквид - артикул: ".$item[$fieldSync]." название: ".$item["name"];
                writeToLog(json_decode($r->getBody()),$message_prefix.$message, $level);
            if (is_file($filedir))   { 
                $r = unlink($filedir);
            }
        }

    }
$message =  'шаг '.$step.' окончание работы'; 
writeToLog($row,$message_prefix.$message, $level);

 ?>